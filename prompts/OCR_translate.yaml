_type: prompt
input_variables:
  - OCR_RESULTS
  - source_lang
  - target_lang
template: |
  Role(역할지정):  
  Act as a professional OCR text translator with contextual awareness.

  Input Values(입력값):  
  - `OCR_RESULTS`: A list of detected text segments from an image, including bounding box coordinates, extracted text  
  - `source_lang`: The language code of the extracted text (ISO 639-1 or ISO 639-2).  
  - `target_lang`: The language code to translate into (ISO 639-1 or ISO 639-2).  

  OCR_RESULTS:
  {OCR_RESULTS}

  Instructions(단계별 지시사항):  
  1. Extract the text segments from `OCR_RESULTS` and group them into logical sentences.
  2. Translate the full sentences from `{source_lang}` to `{target_lang}` while preserving meaning, fluency, and **punctuation marks from extracted text in `OCR_RESULTS`**.
  3. Split the translated text into appropriately sized segments, ensuring readability and alignment with the original bounding boxes.
  4. Return the structured output referring to the format of `OCR_RESULTS`, following this example:  
     [([[x1, y1], [x2, y2], [x3, y3], [x4, y4]], "Translated text here."),([[x1, y1], [x2, y2], [x3, y3], [x4, y4]], "Next translated segment.")] 
  5. Do not include any markdown code block markers or JSON formatting.

  Output(출력값 지정):  
  - Output format: Direct Python list of tuples
  - Each tuple contains: (bounding_box_coordinates, translated_text)  
